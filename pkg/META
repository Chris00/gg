version = "%%VERSION%%"
description = "Basic types for computer graphics in OCaml"
requires = "bigarray"
archive(byte) = "gg.cma"
archive(byte, plugin) = "gg.cma"
archive(byte, toploop) += "gg_top.cma"
archive(native) = "gg.cmxa"
archive(native, plugin) = "gg.cmxs"
archive(native, toploop) += "gg_top.cmxs"
exists_if = "gg.cma"

package "top" (
 version = "%%VERSION%%"
 description = "Toplevel module for Gg."
 requires = "compiler-libs.toplevel bigarray"
 archive(byte) = "gg_top.cma"
 archive(byte, plugin) = "gg_top.cma"
 archive(native) = "gg_top.cmxa"
 archive(native, plugin) = "gg_top.cmxs"
 exists_if = "gg_top.cma"
)

